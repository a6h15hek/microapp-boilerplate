const fs = require('fs');
const execSync = require('child_process').execSync;
const moment = require('moment');
const packageJson = require('../package.json');

function generateGitProperties() {
  console.log("Starting generation of git.properties file...");

  let gitProperties = `#Generated by Git-Commit-Id-Plugin\n#${new Date().toUTCString()}\n`;
  const commands = {
    'branch': 'git rev-parse --abbrev-ref HEAD',
    'build.user.name': 'git config user.name',
    'build.user.email': 'git config user.email',
    'commit.id': 'git rev-parse HEAD',
    'commit.message.full': 'git log -1 --pretty=%B',
    'commit.time': 'git show -s --format=%cI',
  };

  // Adding build time and build version here
  gitProperties += `git.build.time=${moment().format('YYYY-MM-DDTHH:mm:ssZ')}\n`;
  gitProperties += `git.build.version=${packageJson.version}\n`;

  for (const prop in commands) {
    try {
      gitProperties += `git.${prop}=${execSync(commands[prop]).toString().trim()}\n`;
      console.log(`Successfully fetched ${prop}`);
    } catch (error) {
      console.error(`An error occurred while getting ${prop}: ${error}`);
    }
  }

  try {
    fs.writeFileSync('git.properties', gitProperties);
    console.log("git.properties file has been written successfully");
  } catch (error) {
    console.error(`An error occurred while writing git.properties: ${error}`);
  }
}

generateGitProperties();
